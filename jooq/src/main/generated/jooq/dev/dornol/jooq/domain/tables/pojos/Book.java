/*
 * This file is generated by jOOQ.
 */
package dev.dornol.jooq.domain.tables.pojos;


import dev.dornol.jooq.domain.tables.interfaces.IBook;

import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Book implements IBook {

    private static final long serialVersionUID = 1L;

    private final Long id;
    private final String title;
    private final Long authorId;
    private final LocalDateTime createdDate;
    private final LocalDateTime updatedDate;

    public Book(IBook value) {
        this.id = value.getId();
        this.title = value.getTitle();
        this.authorId = value.getAuthorId();
        this.createdDate = value.getCreatedDate();
        this.updatedDate = value.getUpdatedDate();
    }

    public Book(
        Long id,
        String title,
        Long authorId,
        LocalDateTime createdDate,
        LocalDateTime updatedDate
    ) {
        this.id = id;
        this.title = title;
        this.authorId = authorId;
        this.createdDate = createdDate;
        this.updatedDate = updatedDate;
    }

    /**
     * Getter for <code>public.book.id</code>.
     */
    @Override
    public Long getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.book.title</code>.
     */
    @Override
    public String getTitle() {
        return this.title;
    }

    /**
     * Getter for <code>public.book.author_id</code>.
     */
    @Override
    public Long getAuthorId() {
        return this.authorId;
    }

    /**
     * Getter for <code>public.book.created_date</code>.
     */
    @Override
    public LocalDateTime getCreatedDate() {
        return this.createdDate;
    }

    /**
     * Getter for <code>public.book.updated_date</code>.
     */
    @Override
    public LocalDateTime getUpdatedDate() {
        return this.updatedDate;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Book other = (Book) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.title == null) {
            if (other.title != null)
                return false;
        }
        else if (!this.title.equals(other.title))
            return false;
        if (this.authorId == null) {
            if (other.authorId != null)
                return false;
        }
        else if (!this.authorId.equals(other.authorId))
            return false;
        if (this.createdDate == null) {
            if (other.createdDate != null)
                return false;
        }
        else if (!this.createdDate.equals(other.createdDate))
            return false;
        if (this.updatedDate == null) {
            if (other.updatedDate != null)
                return false;
        }
        else if (!this.updatedDate.equals(other.updatedDate))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.title == null) ? 0 : this.title.hashCode());
        result = prime * result + ((this.authorId == null) ? 0 : this.authorId.hashCode());
        result = prime * result + ((this.createdDate == null) ? 0 : this.createdDate.hashCode());
        result = prime * result + ((this.updatedDate == null) ? 0 : this.updatedDate.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Book (");

        sb.append(id);
        sb.append(", ").append(title);
        sb.append(", ").append(authorId);
        sb.append(", ").append(createdDate);
        sb.append(", ").append(updatedDate);

        sb.append(")");
        return sb.toString();
    }
}
